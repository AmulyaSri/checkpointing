#+Title: Understanding Python for OVPL
#+Author: Prakash B. Hegade
#+Date: [2014-10-16 Thu]

Before starting with code improvements / clean up on OVPL, it is advised to be familiar with following python concepts:

** pass
"pass" is a null operation
- when it is executed, nothing happens
- It is useful as a placeholder when a statement is required syntactically, but no code needs to be executed

** Mapping and Dictionary (dict)
- A mapping object maps hashable values to arbitrary objects
- Mappings are mutable objects
- There is currently only one standard mapping type, the "dictionary"

Dictionaries can be created by placing a comma-separated list of key: value pairs within braces.

For example:
#+BEGIN_example
{'jack': 4098, 'sjoerd': 4127} or {4098: 'jack', 4127: 'sjoerd'}, or by the dict constructor.
#+END_example

Likewise, usage of dict in various ways can be seen below:
#+BEGIN_example
>>> a = dict(one=1, two=2, three=3)
>>> b = {'one': 1, 'two': 2, 'three': 3}
>>> c = dict(zip(['one', 'two', 'three'], [1, 2, 3]))
>>> d = dict([('two', 2), ('one', 1), ('three', 3)])
>>> e = dict({'three': 3, 'one': 1, 'two': 2})
>>> a == b == c == d == e
True
#+END_example


** dir()

The built-in function dir() is used to find out which names a module defines. It returns a sorted list of strings.
#+BEGIN_example
    >>> import fibo, sys
    >>> dir(fibo)
    ['__name__', 'fib', 'fib2']
#+END_example


Without arguments, dir() lists the names you have defined currently:
#+BEGIN_example
    >>> a = [1, 2, 3, 4, 5]
    >>> import fibo, sys
    >>> fib = fibo.fib
    >>> dir()
    ['__name__', 'a', 'fib', 'fibo', 'sys']
#+END_example
Note that it lists all types of names: variables, modules, functions, etc. 

** raise
The raise statement allows the programmer to force a specified exception to occur

** self Variable
It is no0t very easy to understand the concept of self variable in python. A good documentation can be found here: [[http://freepythontips.wordpress.com/2013/08/07/the-self-variable-in-python-explained/][self in python]]
